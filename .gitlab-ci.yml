stages:
- build
- test
- release

build:
  image: dbogatov/docker-images:net-core-latest
  stage: build
  script:
  - printf "{\"Version\":{\"GitHash\":\"%s\"}}" $CI_BUILD_REF > src/version.json
  - ./build.sh
  artifacts:
    expire_in: 90 min
    paths:
    - src/bin/
  tags:
  - docker

test-dotnet:
  stage: test
  image: dbogatov/docker-images:net-core-latest
  script:
  - export ASPNETCORE_ENVIRONMENT="Testing"
  - printf "{\"Version\":{\"GitHash\":\"%s\"}}" $CI_BUILD_REF > src/version.json
  - cd test
  - dotnet restore
  - ./test.sh | tee tests.out
  - "cat tests.out | grep 'Failed: 0.'"
  tags:
  - docker

tidy:
  image: dbogatov/docker-images:net-core-latest
  stage: test
  dependencies:
  - build
  before_script:
  - export ASPNETCORE_ENVIRONMENT="Staging"
  - cd src/bin/release/netcoreapp1.1/publish/
  - dotnet shevastream.dll > /dev/null &
  - sleep 15
  script:
  - curl -Ls http://localhost/ | tidy -e
  - curl -Ls http://localhost/home/profile | tidy -e
  - curl -Ls http://localhost/home/contact | tidy -e
  - curl -Ls http://localhost/home/faq | tidy -e
  - curl -Ls http://localhost/store/product | tidy -e
  - curl -Ls http://localhost/store/product/1 | tidy -e
  - curl -Ls http://localhost/store/cart | tidy -e
  - curl -Ls http://localhost/blog | tidy -e
  - curl -Ls http://localhost/blog/29 | tidy -e
  tags:
  - docker
  
blc:
  image: dbogatov/docker-images:net-core-latest
  stage: test
  dependencies:
  - build
  before_script:
  - export ASPNETCORE_ENVIRONMENT="Staging"
  - cd src/bin/release/netcoreapp1.1/publish/
  - dotnet shevastream.dll > /dev/null &
  - sleep 15
  script:
  - blc --filter-level 3 --input http://localhost -rog --exclude "*linkedin.*"
  tags:
  - docker

release:
  stage: release
  dependencies:
  - build
  script:
  - docker build -t registry.dbogatov.org/dbogatov/shevastream:$CI_BUILD_REF_NAME .
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.dbogatov.org
  - docker push registry.dbogatov.org/dbogatov/shevastream:$CI_BUILD_REF_NAME
  tags:
  - shell
